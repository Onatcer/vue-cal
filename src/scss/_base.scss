@use './variables' as *;

// Global structure.
// --------------------------------------------------------
:root {
  scroll-behavior: smooth;
  --w-base-color: #2c3e50;
  --code-color: #2399ee;
  --code-bg-color: color-mix(in srgb, var(--w-contrast-bg-color) 5%, transparent);

  &[data-theme="dark"] {
    --w-base-color: rgba(#fff, 0.8);
    --code-color: #84deff;
    --code-bg-color: color-mix(in srgb, var(--w-contrast-bg-color) 12%, transparent);
  }

  font: 15px 'Avenir', Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: var(--w-base-color);
}

aside {
  width: 220px;
  flex-grow: 0;
  flex-shrink: 0;
  padding: 1.5rem 0 2rem;
  display: flex;
  justify-content: flex-end;

  .nav {
    position: fixed;
    top: 70px;
    margin-right: -1px;
    overflow: hidden;
  }
  ul {margin-left: 0;list-style-type: none;}

  .nav__item {
    position: relative;
    display: flex;
    padding: 4px 2rem 4px 0;
    justify-content: flex-end;
    font-size: 1.1rem;

    &.router-link-active {font-weight: bold;}

    &:after {
      content: '';
      position: absolute;
      inset: 0;
      border-right: 2px solid transparent;
      transform-origin: right;
      transform: scaleX(0);
      transition: 0.25s transform;
      z-index: 1;
      background-image: linear-gradient(90deg, rgba(255, 255, 255, 0), color-mix(in srgb, var(--w-contrast-bg-color) 6%, transparent) 50%);
    }
    &:hover:after {
      border-right-color: color-mix(in srgb, var(--w-contrast-bg-color) 20%, transparent);
      transform: scaleX(1);
    }
    &.router-link-active:after {
      border-right-color: var(--w-primary-color);
      background-image: linear-gradient(90deg, rgba(255, 255, 255, 0), rgba(128, 231, 172, 0.12) 50%);
      transform: scaleX(1);
    }
  }
}

.page {
  position: relative;
  overflow: auto;
}

main {
  padding-top: 65px; // 40 for the top bar height, + arbitrary 25 for spacing out.
  padding-left: 4rem;
  border-left: 1px solid color-mix(in srgb, var(--w-contrast-bg-color) 20%, transparent);
  flex-grow: 1;
}

.page-container {
  width: 100%;
  max-width: $page-max-width;
  margin-left: auto;
  margin-right: auto;
}

footer {
  display: flex;
  flex-grow: 0;
  flex-wrap: wrap;
  justify-content: space-between;
  font-size: 0.9em;
  font-style: italic;
  margin: 1rem 0 1rem;

  .w-icon {
    font-size: 1.2em;

    &.heart {transition: 1s ease-out;cursor: pointer;}
    &.heart:hover {animation: heart-pulse 1.8s ease-out infinite;}
  }
}

// Common styles.
// --------------------------------------------------------
a {
  text-decoration: none;
  color: var(--w-primary-color);
}

ul {
  margin-left: 16px;

  &.w-list {margin-left: 0;}
  &.no-bullet {list-style-type: none;}
}

// Shared classes & styles.
// --------------------------------------------------------
.scrollable {
  height: 250px;
  overflow-y: scroll;
  padding-right: 1.8em;
}

.highlight-box {
  background: linear-gradient(45deg, #ecf8f1, rgba(#fff, 0));
  padding: 16px;
  border-radius: 8px;

  .w-icon.bolt {
    width: 68px;
    height: 68px;
    background-color: rgba(#000, 0.05);
    display: flex;
    align-items: center;
    justify-content: center;
  }
}

.message-box {
  width: 100%;
  max-width: 650px;
  margin: 0;
}

.ssh-pre {
  margin-top: 12px;
  margin-bottom: 12px;
  font-size: 13px;
  line-height: 1.35;

  &[data-label] {margin-top: 2.5em;}
  &--dark {background-color: #2d2d2d;}
}

.important-notes {
  font-weight: normal;
  font-size: 15px;

  small {
    display: block;
    font-size: 13px;
    line-height: 19px;
  }
}

@keyframes heart-pulse {
  0%, 20%, 30%, 35%, 45%, 100% {transform: scale(1);}
  25%, 40% {transform: scale(1.3);}
}

// Media queries.
// --------------------------------------------------------
@media screen and (max-width: $sm) {
  aside {
    width: 170px;
    padding-left: 0;
    padding-right: 0;
  }

  main {padding-left: 2.5rem;}
}

@media screen and (max-width: 750px) {
  aside {display: none;}

  main {padding-left: 0;border-left: none;}
}

@media screen and (max-width: ($page-max-width + (2 * $container-padding-md))) {
  :root {--container-padding: #{$container-padding-md};}

  .page-container {
    padding-left: var(--container-padding);
    padding-right: var(--container-padding);
  }
}

@media screen and (max-width: (500 + (2 * $container-padding-sm))) {
  :root {--container-padding: #{$container-padding-sm};}
}
